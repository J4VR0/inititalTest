<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_pdm_pdr_user_access</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>(PKD) Sync user with Group</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	var group_id = "";
	
	if(current.role == 'HRBP')
		group_id = gs.getProperty('x_pdm_pdr.group.id.local.hrbp');
	else if(current.role == 'RHRM')
		group_id = gs.getProperty('x_pdm_pdr.group.id.regional.hrm');
	
	
	switch(current.operation()){
		case 'insert':
		addUser(group_id, current.employee);
		break;
		
		case 'update':
		addUser(group_id, current.employee);
		//removeUser(group_id, previous.employee);
		break;
		
		case 'delete':
		//removeUser(group_id, current.employee);
		break;
		
	}
	
	function addUser(group_id, user){
		if(checkMbr(group_id, user)){
			var g = new GlideRecord('sys_user_grmember');
			g.initialize();
			g.user = user;
			g.group = group_id;
			g.insert();
			
		}
	}
	
	function removeUser(group_id, user){
		var gm = new GlideRecord('sys_user_grmember');
		gm.addQuery('user', user);
		gm.addQuery('group', group_id);
		gm.query();
		
		if(gm.next())
			gm.deleteRecord();
	}
	
	function checkMbr(group_id, user){
		var gm = new GlideRecord('sys_user_grmember');
		gm.addQuery('user', user);
		gm.addQuery('group', group_id);
		gm.query();
		return !gm.next();
		
	}
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>jonathanv_adm</sys_created_by>
        <sys_created_on>2017-12-15 18:45:49</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>28732435134783006b3330128144b085</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>(PKD) Sync user with Group</sys_name>
        <sys_overrides/>
        <sys_package display_value="Performance &amp; Development Review" source="x_pdm_pdr">5c227acc13b50bc0995fb6d96144b0f9</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Performance &amp; Development Review">5c227acc13b50bc0995fb6d96144b0f9</sys_scope>
        <sys_update_name>sys_script_28732435134783006b3330128144b085</sys_update_name>
        <sys_updated_by>jonathanv_adm</sys_updated_by>
        <sys_updated_on>2017-12-15 20:04:33</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=28732435134783006b3330128144b085"/>
</record_update>
