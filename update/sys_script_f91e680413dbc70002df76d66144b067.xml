<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>true</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>u_performance_evaluation</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message><![CDATA[<p>Goals and Competencies created!</p>]]></message>
        <name>(PDR) Create Related Goals</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
checkPrevEval();
	
function checkPrevEval(employee){
		//Get previous year
		var master = new PDRMaster();
		var prevYear = current.u_year -1;
		
		//Check if user has performance eval from previous year
		var prevEval = new GlideRecord('u_performance_evaluation');
		prevEval.addQuery('u_employee_name.sys_id', employee);
		prevEval.addQuery('u_parent.u_year', prevYear.toString());
		prevEval.query();
		if(prevEval.next()){
			var fgArr = prevEval.u_future_sg_1 + ':1';
			fgArr += ',' + prevEval.u_future_sg_2 + ':2';
			fgArr += ',' + prevEval.u_future_sg_3 + ':3';
			fgArr += ',' + prevEval.u_future_sg_4 + ':4';
			fgArr += ',' + prevEval.u_future_sg_5 + ':5';
			
			master.getPrevEval(employee, fgArr, current.sys_id, '');
		}else{
			master.getPrevEval(employee, '', current.sys_id, '');
		}

	}
	
})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>jonathanv_adm</sys_created_by>
        <sys_created_on>2017-12-22 19:01:50</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f91e680413dbc70002df76d66144b067</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>(PDR) Create Related Goals</sys_name>
        <sys_overrides/>
        <sys_package display_value="Performance &amp; Development Review" source="x_pdm_pdr">5c227acc13b50bc0995fb6d96144b0f9</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Performance &amp; Development Review">5c227acc13b50bc0995fb6d96144b0f9</sys_scope>
        <sys_update_name>sys_script_f91e680413dbc70002df76d66144b067</sys_update_name>
        <sys_updated_by>jonathanv_adm</sys_updated_by>
        <sys_updated_on>2017-12-22 19:01:50</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=f91e680413dbc70002df76d66144b067"/>
</record_update>
